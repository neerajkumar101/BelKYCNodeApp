# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:

    zookeeper:
        image: hyperledger/fabric-zookeeper:x86_64-1.1.0-preview
        ports:
            - 2181
            - 2888
            - 3888

    kafka:
        image: hyperledger/fabric-kafka:x86_64-1.1.0-preview
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=${KAFKA_DEFAULT_REPLICATION_FACTOR}
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092

    orderer:
        image: hyperledger/fabric-orderer:x86_64-1.1.0-preview
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_privnet
            - ORDERER_HOME=/var/hyperledger/fabric/orderer
            - ORDERER_GENERAL_LOGLEVEL=debug

            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/fabric/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP

            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=7050
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/fabric/orderer/orderer.genesis-kafka.block
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka

            - CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT=${CONFIGTX_ORDERER_BATCHSIZE_MAXMESSAGECOUNT}
            - CONFIGTX_ORDERER_BATCHTIMEOUT=${CONFIGTX_ORDERER_BATCHTIMEOUT}
            - CONFIGTX_ORDERER_ADDRESSES=[127.0.0.1:7050]
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=${ORDERER_GENERAL_TLS_ENABLED}
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/fabric/orderer/tls/server.key            
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/fabric/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/fabric/orderer/tls/ca.crt]
        volumes: 
            - ../../artifacts/channel-artifacts/genesis-kafka.block:/var/hyperledger/fabric/orderer/orderer.genesis-kafka.block
            # - ../../artifacts/crypto-config/ordererOrganizations/example.com/orderers:/var/hyperledger/fabric/orderer/crypto
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - '7050'

    couchdb:
        image: hyperledger/fabric-couchdb:x86_64-1.1.0-preview

    peer:
        image: hyperledger/fabric-peer:x86_64-1.1.0-preview
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_privnet
            - CORE_PEER_ADDRESSAUTODETECT=true
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_PROFILE_ENABLED=true
            
            - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp

            - CORE_LEDGER_STATE_STATEDATABASE=CouchDB

            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_LOGGING_GOSSIP=${CORE_LOGGING_GOSSIP}
            # TLS settings
            - CORE_PEER_TLS_ENABLED=${CORE_PEER_TLS_ENABLED}
            - CORE_PEER_TLS_CLIENTAUTHREQUIRED=${CORE_PEER_TLS_CLIENTAUTHREQUIRED}
            - CORE_PEER_TLS_CLIENTROOTCAS_FILES=[/etc/hyperledger/fabric/tls/ca.crt]
            - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ../../fabric/common:/opt/gopath/src/github.com/hyperledger/fabric/common
            - ../../fabric/vendor:/opt/gopath/src/github.com/hyperledger/fabric/vendor
            - ../../artifacts:/var/hyperledger/configs
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        command: peer node start
        ports:
            - '7051'
            - '7053'

